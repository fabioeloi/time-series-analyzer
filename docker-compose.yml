services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: time_series_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d time_series_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-development}
      API_KEY: ${API_KEY}
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_POOL_SIZE: ${DATABASE_POOL_SIZE:-5}
      DATABASE_MAX_OVERFLOW: ${DATABASE_MAX_OVERFLOW:-10}
      DATABASE_POOL_RECYCLE: ${DATABASE_POOL_RECYCLE:-3600}
      REDIS_ENABLED: ${REDIS_ENABLED:-true}
      REDIS_URL: ${REDIS_URL}
      REDIS_TTL_SECONDS: ${REDIS_TTL_SECONDS:-3600}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
    depends_on:
      timescaledb:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_KEY: ${REACT_APP_API_KEY}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:8000}
    depends_on:
      backend:
        condition: service_healthy

volumes:
  timescaledb_data:
  redis_data: